# -*- coding: utf-8 -*-
"""AI Medication Tracker

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oMZXy7HqT2QvZnKRqXb-glP_XL8_yOXs
"""

# STEP 1: Upload your `archive.zip` file
from google.colab import files
uploaded = files.upload()

# STEP 2: Unzip the uploaded archive
import zipfile
import os

with zipfile.ZipFile("archive.zip", 'r') as zip_ref:
    zip_ref.extractall("med_data")

# Check file names
os.listdir("med_data")

# STEP 3: Load your CSV (adjust filename if needed)
import pandas as pd

df = pd.read_csv("med_data/Medicine_Details.csv")  # Change name if different
df.fillna("", inplace=True)
df.head()  # Preview data

# STEP 4: Functions to check allergies, conditions, and age

def extract_ingredients(composition):
    parts = composition.lower().replace("(", "").replace(")", "").split("+")
    return [p.strip().split()[0] for p in parts if p.strip()]

def check_allergies(composition, user_allergies):
    ingredients = extract_ingredients(composition)
    for allergy in user_allergies:
        for ing in ingredients:
            if allergy.lower() in ing:
                return True, ing
    return False, None

def match_condition(uses, user_conditions):
    for condition in user_conditions:
        if condition.lower() in uses.lower():
            return True
    return False

def check_age_warning(age, med_name):
    if "aspirin" in med_name.lower() and age < 12:
        return "⚠️ Aspirin not safe under age 12"
    return None

def evaluate_medications(user_meds, age, allergies, conditions):
    results = []
    for med in user_meds:
        match = df[df["Medicine Name"].str.lower() == med.lower()]
        if match.empty:
            results.append({ "Medicine": med, "Status": "❌ Not found" })
            continue

        row = match.iloc[0]
        allergy_flag, allergen = check_allergies(row["Composition"], allergies)
        condition_match = match_condition(row["Uses"], conditions)
        age_warn = check_age_warning(age, row["Medicine Name"])

        results.append({
            "Medicine": row["Medicine Name"],
            "Allergy Alert": f"Contains {allergen}" if allergy_flag else "None",
            "Matches Condition": "Yes" if condition_match else "No",
            "Age Warning": age_warn if age_warn else "None",
            "Side Effects": row["Side_effects"][:200] + "..." if len(row["Side_effects"]) > 200 else row["Side_effects"],
            "Uses": row["Uses"]
        })
    return results

